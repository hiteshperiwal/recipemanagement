"""
Django settings for recipemanagement project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# from dotenv import load_dotenv

# import dj_database_url

from django.core.exceptions import ImproperlyConfigured

# Attempt to fetch DATABASE_URL from environment variables
DATABASE_URL = os.environ.get('DATABASE_URL')


# if 'DATABASE_URL' in os.environ:
#     DATABASES['default'] = dj_database_url.config(
#         conn_max_age=500,
#         conn_health_checks=True,
#     )
# else:
#     # If no DATABASE_URL is set, fall back to manual configuration
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.postgresql',
#             'NAME': 'railway',  # Replace with your actual database name
#             'USER': 'postgres',  # Replace with your actual username
#             'PASSWORD': 'hfxCTNChatbfydEJcNwReZZAkRVEiqGH',    # Replace with your actual password
#             'HOST': 'postgres.railway.internal',  # Replace with your actual host
#             'PORT': '5432',
#         }
#     }

# # Optionally, raise an error if the database configuration is still not set up
# if not DATABASES['default'].get('ENGINE'):
#     raise ImproperlyConfigured("No valid database configuration found. Ensure DATABASE_URL is set or manual settings are correct.")



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# env_path = load_dotenv(os.path.join(BASE_DIR, '.env'))
# load_dotenv(env_path)


# Quick-start development settings - unsuitable for production

# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-lz)3(jxvmppv$#zptq3kbg7v+w%pf^&u3g0_-)@x^-5spcbqiw'
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY','django-insecure-lz)3(jxvmppv$#zptq3kbg7v+w%pf^&u3g0_-)@x^-5spcbqiw')
# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = False
DEBUG = os.environ.get('DJANGO_DEBUG', '') != 'False'

ALLOWED_HOSTS = ['.vercel.app','now.sh','127.0.0.1','localhost']

# if DATABASE_URL:
#     DATABASES = {
#         'default': dj_database_url.config(default=DATABASE_URL, conn_max_age=1800),
#     }
# else:
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.postgresql',
#             'NAME': 'railway',
#             'USER': 'postgres',
#             'PASSWORD': 'hfxCTNChatbfydEJcNwReZZAkRVEiqGH',
#             'HOST': '',
#             'PORT': '5432',
#         }
#     }
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': os.getenv('DB_NAME', 'railway'),
#         'USER': os.getenv('DB_USER', 'postgres'),
#         'PASSWORD': os.getenv('DB_PASSWORD', 'hfxCTNChatbfydEJcNwReZZAkRVEiqGH'),
#         'HOST': os.getenv('DB_HOST', 'postgres.railway.internal'),
#         'PORT': os.getenv('DB_PORT', '5432'),
#     }
# }

EXTERNAL_APP=['vege']
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
     'recipemanagement'
]

INSTALLED_APPS+=EXTERNAL_APP

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'recipemanagement.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'recipemanagement.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles_build', 'static')
STATICFILES_DIRS = os.path.join(BASE_DIR, 'static'),



# Media files (user uploaded content)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST="smtp.gmail.com"
EMAIL_USE_TLS=True
EMAIL_PORT=587
EMAIL_HOST_USER="mailhp1.0@gmail.com"
EMAIL_HOST_PASSWORD="qceo jdvs xutf gyjs"


# if 'DATABASE_URL' in os.environ:
#     DATABASES['default'] = dj_database_url.config(
#         conn_max_age=500,
#         conn_health_checks=True,
#     )